function call(e,a){return e.loading()?{done:function(){},always:function(){},fail:function(){}}:(e.loading(!0),$.ajax({url:".",method:"POST",headers:{"X-CSRFToken":$("#celery").data("token")},data:JSON.stringify(a),dataType:"json"}).always(function(){e.loading(!1)}))}function Info(e){var a=this;a.raw=e,a.task=e.parent,a.id=ko.observable(e.id),a.args=ko.observable(e.args),a.kwargs=ko.observable(JSON.stringify(e.kwargs))}function Extra(a){this.raw=a;var n=[];Object.keys(a).forEach(function(e){n.push([e,a[e]])}),this.entries=ko.observableArray(n)}function Func(e){var a=this;a.raw=e,a.name=ko.observable(e.data),a.doc=ko.observable(),a.signature=ko.observable(),a.loading=ko.observable(!1),a.worker=e.parent,a.inspect=function(){return call(a,{op:"func",name:a.name()}).done(function(e){ko.mapping.fromJS(e,{},a),a.worker.selectedFunc(a),a.worker.display("func_details")})}}function Task(e){var a=this;a.raw=e,a.time_start=ko.observable(),a.info=ko.observable(),a.args=ko.observable(),a.kwargs=ko.observable(),a.extra=ko.observable(),a.loading=ko.observable(!1),a.worker=e.parent,ko.mapping.fromJS(e.data,mapping,a),a.start=ko.computed(function(){if(a.time_start())return new Date(1e3*a.time_start())}),a.inspect=function(){return call(a,{op:"task",id:a.id()}).done(function(e){a.extra(e.extra),a.kwargs(JSON.stringify(e.info.kwargs)),a.worker.selectedTask(a),a.worker.display("task_details")})}}var mapping={workers:{create:function(e){return new Worker(e)}},active:{create:function(e){return new Task(e)}},registered:{create:function(e){return new Func(e)}},info:{create:function(e){return new Info(e)}},extra:{create:function(e){return new Extra(e)}}};function Worker(e){var a=this;a.raw=e,a.parent=e.parent,a.name=ko.observable(),a.selectedFunc=ko.observable(),a.selectedTask=ko.observable(),a.tab=ko.observable(1),a.display=ko.observable("summary"),a.tab.subscribe(function(){a.display("summary")}),a.active=ko.observableArray([]),a.reserved=ko.observableArray([]),a.registered=ko.observableArray([]),a.scheduled=ko.observableArray([]),ko.mapping.fromJS(e.data,mapping,a),ko.mapping.fromJS(e.data.stats,{},a),a.loading=ko.observable(!1),a.inspect=function(){return a.parent.loading(!0),call(a,{op:"worker",name:a.name()}).done(function(e){ko.mapping.fromJS(e,mapping,a),a.tab(1)}).always(function(){a.parent.loading(!1)})}}function CeleryModel(){var a=this;a.workers=ko.observableArray([]),a.tab=ko.observable(1),a.message=ko.observable(),a.fetched=ko.observable(!1),a.loading=ko.observable(!1),a.interval=ko.observable(0),a.display=ko.observable("summary"),a.intervals=ko.observableArray([0,1,10,30,60]),a.interval.subscribe(function(e){0<e&&setTimeout(a.refresh,1e3*e)}),a.refresh=function(){var n=[];a.loading(!0),$.each(a.workers(),function(e,a){n.push(a.inspect())}),$.when.apply(null,n).then(function(){0<a.interval()&&(a.loading(!1),setTimeout(a.refresh,1e3*a.interval()))})},a.terminate=function(){call(a,{op:"terminate_all"}).done(function(e){a.stats().done(function(){$.each(a.workers(),function(e,a){a.inspect()})})})},a.testTask=function(){a.message("Invoking...."),call(a,{op:"test"}).done(function(e){a.message("Test task invoked"),a.stats().done(function(){$.each(a.workers(),function(e,a){a.inspect()})})})},a.purge=function(){call(a,{op:"purge"}).done(function(e){a.stats().done(function(){$.each(a.workers(),function(e,a){a.inspect()})})})},a.stats=function(){return call(a,{op:"stats"}).done(function(e){var n=[];$.each(e.stats,function(e,a){a.name=e,n.push(a)}),ko.mapping.fromJS({workers:n},mapping,a),a.fetched(!0)})}}